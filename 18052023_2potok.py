# -*- coding: utf-8 -*-
"""18052023_2potok.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KNCzMU_meux2yNjffby93sqo0JO74wXh
"""

import sqlite3
import pandas as pd


connection = sqlite3.connect("Students.db")
query = "SELECT * FROM Students"
df = pd.read_sql(query,connection)
print(df)

#connection2 = sqlite3.connect("teachers.db")
#df.to_sql("Students", connection2, index = False)
#print('ok')
df.to_json('students.json')

# Разбор задача из ДЗ Вариант популярный

import sqlite3

def get_student(student_id):
  connection = sqlite3.connect("teachers.db")
  cursor = connection.cursor()
  query = "SELECT * FROM School JOIN Students ON School.School_Id = Students.School_Id WHERE Students.Student_id = ?"
  cursor.execute(query,(student_id,))
  records = cursor.fetchall()
  print(records)
  #for row in records:
    #print()
  

get_student(201)

# Решение ДЗ через 2 БД
import sqlite3

def get_schoolname(school_id):
  connection = sqlite3.connect("Schools.db")
  cursor = connection.cursor()
  query = "SELECT * FROM School WHERE School_Id = ?"
  cursor.execute(query,(school_id,))
  record = cursor.fetchone()
  connection.close()
  print ("Название школы ", record[1])
  

def get_stud_detail(student_id):
  connection = sqlite3.connect("Students.db")
  cursor = connection.cursor()
  query = "SELECT * FROM Students WHERE Student_id = ?"
  cursor.execute(query,(student_id,))
  record = cursor.fetchone()
  print ("ID Студента", record[0])
  print ("Имя", record[1])
  print ("ID школы", record[2])
  school_id = record[2]
  get_schoolname(school_id)
  


get_stud_detail(201)

#get_schoolname(1)

import pandas as pd
import numpy as np

x = pd.Series(np.random.randn(5), index = ['a','b','c','d','e'])
print (x)
print (x['a'])

import pandas as pd
import numpy as np

df = pd.DataFrame (np.random.randn(5,3),
index = pd.date_range ('1/1/2023', periods = 5),
columns = ['test1', 'test2', 'test3'])

df.describe()

import pandas as pd

df1 = pd.DataFrame ({'A': [0,1,2,3,4],
                     'B': [5,6,7,8,9],
                     'C': ['G','blabla',2424,'fhgh','ajhahjr']})
print (df1)

import pandas as pd

df = pd.read_excel('data.xlsx', sheet_name='Sheet1')
x = df.replace("Яблоки", "Конфеты")
print (x)
x.describe()

import pandas as pd

df = pd.read_excel('data.xlsx', sheet_name='Sheet1')

kapusta = df[df['sku'] == 'Киви']
df2 = kapusta[kapusta['priceoforder'] > 1000]
print (df2)
df2.to_excel('kapusta2.xlsx', index = False)

import pandas as pd
import sqlite3


connection = sqlite3.connect("Students.db")
df = pd.read_sql("SELECT * FROM City1;", connection)

print (df)

import pandas as pd
import sqlite3


connection = sqlite3.connect("Students.db")
df_city = pd.DataFrame({"School_Id": [1,2,3,4],
                        "City": ["МСК","СПБ","ЕКБ","Казань"]})
df_city.to_sql("City1", connection, index = False, if_exists="append")

import pandas as pd
import requests

token = ""
link = ""

request = f"{link}/rtpi_rosstat_weight?select=rosstat_id,rosstat_name"

myheaders = {'Authorization': f'Bearer {token}',
             'Content-Type': 'application/json',
             'Range-Unit': 'items'}

response = requests.get(request, headers=myheaders)

response.json()

df = pd.DataFrame(response.json())
df.to_excel('output2.xlsx', index = False)